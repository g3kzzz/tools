#!/usr/bin/env bash
# parse_nmap_minimal.sh - Minimal Nmap output extractor
# Usage: ./parse_nmap_minimal.sh <nmap_output_file>
set -euo pipefail

if [[ $# -ne 1 ]]; then
  echo "Uso: $0 <archivo_nmap>"
  exit 1
fi

FILE="$1"
if [[ ! -f "$FILE" ]]; then
  echo "Archivo no encontrado: $FILE"
  exit 1
fi

# Parse: for each "Nmap scan report for" host, collect open ports
awk '
/^Nmap scan report for[[:space:]]+/ { host = $NF; next }
/\/(tcp|udp).*open/ {
  split($1,p,"/")
  port = p[1]
  if (host=="") host="unknown"
  if (ports[host] == "") ports[host]=port
  else ports[host]=ports[host]","port
}
END {
  # if no explicit "Nmap scan report for" found, try to collect IP from file
  if (length(ports)==0) {
    ip = ""
    # attempt to get an IP and ports globally
    # print first found ip and a comma list of open ports
    while ((getline line < ARGV[1]) > 0) {
      if (ip=="" && match(line, /([0-9]{1,3}\.){3}[0-9]{1,3}/)) {
        ip = substr(line, RSTART, RLENGTH)
      }
      if (match(line, /([0-9]{1,5})\/(tcp|udp).*open/)) {
        if (gsub(/.*$/, "", "") || 1) {} # no-op to keep busy
        split(substr(line, RSTART, RLENGTH), a, "/")
        if (ports[ip]=="") ports[ip]=a[1]
        else ports[ip]=ports[ip]","a[1]
      }
    }
    if (ip=="") exit
    for (h in ports) {
      print h "\t" ports[h]
    }
    exit
  }
  # print hosts in order of discovery if possible
  for (h in ports) {
    print h "\t" ports[h]
  }
}' "$FILE" > /tmp/.nmap_minimal.$$ || true

if [[ ! -s /tmp/.nmap_minimal.$$ ]]; then
  echo "No se encontraron hosts ni puertos abiertos."
  rm -f /tmp/.nmap_minimal.$$
  exit 0
fi

# Print minimal lines: HOST: <host>  PORTS: <csv>
first_ports=""
while IFS=$'\t' read -r host ports_csv; do
  # normalize ports (remove possible duplicates & spaces)
  ports_norm=$(echo "$ports_csv" | tr ',' '\n' | awk '!seen[$0]++' | tr '\n' ',' | sed 's/,$//')
  echo "HOST: $host  PORTS: ${ports_norm:-(none)}"
  if [[ -z "$first_ports" && "$ports_norm" != "" && "$ports_norm" != "(none)" ]]; then
    first_ports="$ports_norm"
  fi
done < /tmp/.nmap_minimal.$$

# copy first host ports to clipboard if xclip present
if command -v xclip >/dev/null 2>&1 && [[ -n "${first_ports}" ]]; then
  echo -n "$first_ports" | xclip -selection clipboard
  echo "Puertos del primer host copiados al portapapeles: $first_ports"
fi

rm -f /tmp/.nmap_minimal.$$
exit 0
